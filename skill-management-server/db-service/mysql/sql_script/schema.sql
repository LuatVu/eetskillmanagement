-- MySQL Script generated by MySQL Workbench
-- Mon Nov 21 10:58:36 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema skm_db
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `skm_db` ;

-- -----------------------------------------------------
-- Schema skm_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `skm_db` DEFAULT CHARACTER SET utf8 ;
USE `skm_db` ;

-- -----------------------------------------------------
-- Table `skm_db`.`change_log`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`change_log` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`change_log` (
  `id` VARCHAR(45) NOT NULL,
  `table_name` VARCHAR(120) NOT NULL,
  `record_id` VARCHAR(45) NOT NULL,
  `record_name` VARCHAR(120) NOT NULL,
  `version` VARCHAR(12) NULL,
  `modified_by` VARCHAR(10) NULL,
  `modified_date` TIMESTAMP NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skm_db`.`change_log_details`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`change_log_details` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`change_log_details` (
  `id` VARCHAR(45) NOT NULL,
  `field_name` VARCHAR(120) NULL,
  `old_value` TEXT NULL,
  `new_value` TEXT NULL,
  `change_log_id` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_change_log_details_change_log1`
    FOREIGN KEY (`change_log_id`)
    REFERENCES `skm_db`.`change_log` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_change_log_details_change_log1_idx` ON `skm_db`.`change_log_details` (`change_log_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `skm_db`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`role` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`role` (
  `id` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `display_name` VARCHAR(45) NULL DEFAULT NULL,
  `description` VARCHAR(250) NULL DEFAULT NULL,
  `status` ENUM('Active', 'Inactive') NOT NULL DEFAULT 'Active',
  `created_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` VARCHAR(45) NOT NULL,
  `modified_date` TIMESTAMP NULL DEFAULT NULL,
  `modified_by` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `skm_db`.`role` (`name` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `skm_db`.`permission_category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`permission_category` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`permission_category` (
  `id` VARCHAR(45) NOT NULL,
  `code` VARCHAR(100) NOT NULL,
  `name` VARCHAR(120) NOT NULL,
  `sequence` TINYINT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `code_UNIQUE` ON `skm_db`.`permission_category` (`code` ASC) VISIBLE;

CREATE UNIQUE INDEX `name_UNIQUE` ON `skm_db`.`permission_category` (`name` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `skm_db`.`permission`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`permission` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`permission` (
  `id` VARCHAR(45) NOT NULL,
  `code` VARCHAR(100) NOT NULL,
  `name` VARCHAR(120) NOT NULL,
  `description` VARCHAR(250) NULL DEFAULT NULL,
  `status` ENUM('Active', 'Inactive') NOT NULL DEFAULT 'Active',
  `created_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` VARCHAR(45) NOT NULL,
  `modified_date` TIMESTAMP NULL DEFAULT NULL,
  `modified_by` VARCHAR(45) NULL DEFAULT NULL,
  `permission_category_id` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_permission_permission_category1`
    FOREIGN KEY (`permission_category_id`)
    REFERENCES `skm_db`.`permission_category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `skm_db`.`permission` (`name` ASC) VISIBLE;

CREATE UNIQUE INDEX `code_UNIQUE` ON `skm_db`.`permission` (`code` ASC) VISIBLE;

CREATE INDEX `fk_permission_permission_category1_idx` ON `skm_db`.`permission` (`permission_category_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `skm_db`.`role_permission`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`role_permission` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`role_permission` (
  `id` VARCHAR(45) NOT NULL,
  `role_id` VARCHAR(45) NOT NULL,
  `permission_id` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_role_has_permission_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `skm_db`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_role_has_permission_permission1`
    FOREIGN KEY (`permission_id`)
    REFERENCES `skm_db`.`permission` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_role_has_permission_permission1_idx` ON `skm_db`.`role_permission` (`permission_id` ASC) VISIBLE;

CREATE INDEX `fk_role_has_permission_role1_idx` ON `skm_db`.`role_permission` (`role_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `skm_db`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`user` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`user` (
  `id` VARCHAR(45) NOT NULL,
  `name` VARCHAR(120) NOT NULL COMMENT 'name is user-nt-id',
  `display_name` VARCHAR(250) NULL DEFAULT NULL,
  `email` VARCHAR(120) NULL DEFAULT NULL,
  `type` ENUM('Person', 'Group') NULL DEFAULT 'Person' COMMENT 'type enum is USER | GROUP | APPROVER',
  `status` ENUM('Active', 'Inactive') NULL DEFAULT 'Active',
  `created_by` VARCHAR(45) NOT NULL,
  `created_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modified_by` VARCHAR(45) NULL,
  `modified_date` TIMESTAMP NULL,
  `first_logged_in_date` TIMESTAMP NULL,
  `last_logged_in_date` TIMESTAMP NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `skm_db`.`user` (`name` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `skm_db`.`user_role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`user_role` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`user_role` (
  `id` VARCHAR(45) NOT NULL,
  `user_id` VARCHAR(45) NOT NULL,
  `role_id` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_member_has_role_member1`
    FOREIGN KEY (`user_id`)
    REFERENCES `skm_db`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_member_has_role_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `skm_db`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_member_has_role_role1_idx` ON `skm_db`.`user_role` (`role_id` ASC) VISIBLE;

CREATE INDEX `fk_member_has_role_member1_idx` ON `skm_db`.`user_role` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `skm_db`.`setting`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`setting` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`setting` (
  `key` VARCHAR(45) NOT NULL,
  `value` VARCHAR(120) NULL,
  PRIMARY KEY (`key`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skm_db`.`project_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`project_type` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`project_type` (
  `id` VARCHAR(45) NOT NULL,
  `name` VARCHAR(120) NOT NULL,
  `sequence` SMALLINT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `skm_db`.`project_type` (`name` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `skm_db`.`project`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`project` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`project` (
  `id` VARCHAR(45) NOT NULL,
  `name` VARCHAR(120) NOT NULL,
  `start_date` DATE NOT NULL,
  `end_date` DATE NULL,
  `leader` VARCHAR(45) NULL,
  `team_size` VARCHAR(45) NULL,
  `challenge` VARCHAR(250) NULL,
  `description` VARCHAR(500) NULL,
  `status` VARCHAR(25) NULL,
  `target_object` VARCHAR(250) NULL,
  `project_type_id` VARCHAR(45) NOT NULL,
  `stack_holder` VARCHAR(120) NULL,
  `gb_unit` VARCHAR(45) NULL,
  `department` VARCHAR(45) NULL,
  `created_by` VARCHAR(45) NOT NULL,
  `created_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modified_by` VARCHAR(45) NULL,
  `modified_date` TIMESTAMP NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_project_project_type1`
    FOREIGN KEY (`project_type_id`)
    REFERENCES `skm_db`.`project_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `skm_db`.`project` (`name` ASC) VISIBLE;

CREATE INDEX `fk_project_project_type1_idx` ON `skm_db`.`project` (`project_type_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `skm_db`.`project_role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`project_role` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`project_role` (
  `id` VARCHAR(45) NOT NULL,
  `name` VARCHAR(120) NOT NULL,
  `description` VARCHAR(250) NULL,
  `status` ENUM('Active', 'Inactive') NOT NULL DEFAULT 'Active',
  `sequence` SMALLINT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `skm_db`.`project_role` (`name` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `skm_db`.`course`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`course` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`course` (
  `id` VARCHAR(45) NOT NULL,
  `name` VARCHAR(120) NOT NULL,
  `description` VARCHAR(250) NULL,
  `course_type` VARCHAR(120) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `skm_db`.`course` (`name` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `skm_db`.`gb_unit`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`gb_unit` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`gb_unit` (
  `id` VARCHAR(45) NOT NULL,
  `name` VARCHAR(120) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `skm_db`.`gb_unit` (`name` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `skm_db`.`department`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`department` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`department` (
  `id` VARCHAR(45) NOT NULL,
  `name` VARCHAR(120) NOT NULL,
  `gb_unit_id` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_department_gb_unit1`
    FOREIGN KEY (`gb_unit_id`)
    REFERENCES `skm_db`.`gb_unit` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `skm_db`.`department` (`name` ASC) VISIBLE;

CREATE INDEX `fk_department_gb_unit1_idx` ON `skm_db`.`department` (`gb_unit_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `skm_db`.`personal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`personal` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`personal` (
  `id` VARCHAR(45) NOT NULL,
  `personal_number` VARCHAR(25) NULL,
  `personal_code` VARCHAR(25) NULL,
  `title` VARCHAR(50) NOT NULL,
  `manager` VARCHAR(45) NOT NULL,
  `level` SMALLINT NOT NULL,
  `experienced_at_bosch` SMALLINT NULL,
  `experienced_non_bosch` SMALLINT NULL,
  `picture` BLOB NULL,
  `department_id` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_personal_user1`
    FOREIGN KEY (`id`)
    REFERENCES `skm_db`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_personal_department1`
    FOREIGN KEY (`department_id`)
    REFERENCES `skm_db`.`department` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_personal_user1_idx` ON `skm_db`.`personal` (`id` ASC) VISIBLE;

CREATE INDEX `fk_personal_department1_idx` ON `skm_db`.`personal` (`department_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `skm_db`.`level`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`level` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`level` (
  `id` VARCHAR(45) NOT NULL,
  `name` VARCHAR(120) NOT NULL,
  `description` VARCHAR(250) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `skm_db`.`level` (`name` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `skm_db`.`skill`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`skill` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`skill` (
  `id` VARCHAR(45) NOT NULL,
  `name` VARCHAR(120) NOT NULL,
  `description` VARCHAR(250) NULL,
  `sequence` SMALLINT NULL,
  `status` ENUM('Active', 'Inactive') NOT NULL DEFAULT 'Active',
  `level_id` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_skill_level1`
    FOREIGN KEY (`level_id`)
    REFERENCES `skm_db`.`level` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `skm_db`.`skill` (`name` ASC) VISIBLE;

CREATE INDEX `fk_skill_level1_idx` ON `skm_db`.`skill` (`level_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `skm_db`.`personal_skill`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`personal_skill` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`personal_skill` (
  `id` VARCHAR(45) NOT NULL,
  `personal_id` VARCHAR(45) NOT NULL,
  `skill_id` VARCHAR(45) NOT NULL,
  `level` SMALLINT NULL DEFAULT 0,
  `experience` SMALLINT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_personal_has_skill_skill1`
    FOREIGN KEY (`skill_id`)
    REFERENCES `skm_db`.`skill` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_personal_skill_personal1`
    FOREIGN KEY (`personal_id`)
    REFERENCES `skm_db`.`personal` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_personal_has_skill_skill1_idx` ON `skm_db`.`personal_skill` (`skill_id` ASC) VISIBLE;

CREATE INDEX `fk_personal_skill_personal1_idx` ON `skm_db`.`personal_skill` (`personal_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `skm_db`.`personal_project`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`personal_project` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`personal_project` (
  `id` VARCHAR(45) NOT NULL,
  `personal_id` VARCHAR(45) NOT NULL,
  `project_id` VARCHAR(45) NOT NULL,
  `project_role_id` VARCHAR(45) NOT NULL,
  `task` VARCHAR(120) NULL,
  `additional_task` VARCHAR(250) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_personal_has_project_personal1`
    FOREIGN KEY (`personal_id`)
    REFERENCES `skm_db`.`personal` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_personal_has_project_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `skm_db`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_personal_project_project_role1`
    FOREIGN KEY (`project_role_id`)
    REFERENCES `skm_db`.`project_role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_personal_has_project_project1_idx` ON `skm_db`.`personal_project` (`project_id` ASC) VISIBLE;

CREATE INDEX `fk_personal_has_project_personal1_idx` ON `skm_db`.`personal_project` (`personal_id` ASC) VISIBLE;

CREATE INDEX `fk_personal_project_project_role1_idx` ON `skm_db`.`personal_project` (`project_role_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `skm_db`.`personal_course`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`personal_course` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`personal_course` (
  `id` VARCHAR(45) NOT NULL,
  `personal_id` VARCHAR(45) NOT NULL,
  `course_id` VARCHAR(45) NOT NULL,
  `course_type` VARCHAR(50) NULL,
  `start_date` DATE NULL,
  `end_date` DATE NULL,
  `status` VARCHAR(25) NULL,
  `certificate` BLOB NULL,
  `trainer` VARCHAR(120) NULL,
  `duration` INT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_personal_has_course_personal1`
    FOREIGN KEY (`personal_id`)
    REFERENCES `skm_db`.`personal` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_personal_has_course_course1`
    FOREIGN KEY (`course_id`)
    REFERENCES `skm_db`.`course` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_personal_has_course_course1_idx` ON `skm_db`.`personal_course` (`course_id` ASC) VISIBLE;

CREATE INDEX `fk_personal_has_course_personal1_idx` ON `skm_db`.`personal_course` (`personal_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `skm_db`.`training_course`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`training_course` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`training_course` (
  `id` VARCHAR(45) NOT NULL,
  `course_id` VARCHAR(45) NOT NULL,
  `trainer` VARCHAR(120) NOT NULL,
  `date` DATE NULL,
  `effort` SMALLINT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_training_course_course1`
    FOREIGN KEY (`course_id`)
    REFERENCES `skm_db`.`course` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `skm_db`.`training_course` (`trainer` ASC) VISIBLE;

CREATE INDEX `fk_training_course_course1_idx` ON `skm_db`.`training_course` (`course_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `skm_db`.`skill_evaluation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `skm_db`.`skill_evaluation` ;

CREATE TABLE IF NOT EXISTS `skm_db`.`skill_evaluation` (
  `id` VARCHAR(45) NOT NULL,
  `personal_id` VARCHAR(45) NOT NULL,
  `skill_id` VARCHAR(45) NOT NULL,
  `current_level` SMALLINT NULL,
  `target_level` SMALLINT NULL,
  `comment` VARCHAR(250) NULL,
  `date` VARCHAR(45) NULL,
  `status` ENUM('APPROVAL_PENDING', 'APPROVED', 'REJECTED', 'CANCELLED') NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_skill_evaluation_skill1`
    FOREIGN KEY (`skill_id`)
    REFERENCES `skm_db`.`skill` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_skill_evaluation_personal1`
    FOREIGN KEY (`personal_id`)
    REFERENCES `skm_db`.`personal` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_skill_evaluation_skill1_idx` ON `skm_db`.`skill_evaluation` (`skill_id` ASC) VISIBLE;

CREATE INDEX `fk_skill_evaluation_personal1_idx` ON `skm_db`.`skill_evaluation` (`personal_id` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
